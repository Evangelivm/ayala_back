generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma-second"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_SECOND")
}

model authorizations {
  id                                       Int                    @id @default(autoincrement())
  requester_id                             Int
  approver_id                              Int?
  fuel_distribution_id                     Int?
  reservation_id                           Int?
  fuel_amount                              Decimal                @db.Decimal(10, 2)
  purpose                                  String?                @db.Text
  status                                   authorizations_status? @default(pending)
  request_date                             DateTime?              @default(now()) @db.Timestamp(0)
  approval_date                            DateTime?              @db.Timestamp(0)
  users_authorizations_requester_idTousers users                  @relation("authorizations_requester_idTousers", fields: [requester_id], references: [id], onUpdate: Restrict, map: "authorizations_ibfk_1")
  users_authorizations_approver_idTousers  users?                 @relation("authorizations_approver_idTousers", fields: [approver_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "authorizations_ibfk_2")
  fuel_distributions                       fuel_distributions?    @relation(fields: [fuel_distribution_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "authorizations_ibfk_3")
  fuel_reservations                        fuel_reservations?     @relation(fields: [reservation_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "authorizations_ibfk_4")

  @@index([approver_id], map: "approver_id")
  @@index([fuel_distribution_id], map: "fuel_distribution_id")
  @@index([requester_id], map: "requester_id")
  @@index([reservation_id], map: "reservation_id")
}

model cost_centers {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(100)
  description   String?         @db.Text
  created_at    DateTime?       @default(now()) @db.Timestamp(0)
  fuel_invoices fuel_invoices[]
}

model fuel_distributions {
  id                                             Int              @id @default(autoincrement())
  voucher_number                                 String           @db.VarChar(50)
  code                                           String           @db.VarChar(50)
  machinery_id                                   Int
  hourmeter                                      Decimal          @db.Decimal(10, 2)
  distribution_date                              DateTime         @db.Date
  fuel_amount                                    Decimal          @db.Decimal(10, 2)
  invoice_id                                     Int?
  distributed_by                                 Int?
  authorized_by                                  Int?
  created_at                                     DateTime?        @default(now()) @db.Timestamp(0)
  authorizations                                 authorizations[]
  machinery                                      machinery        @relation(fields: [machinery_id], references: [id], onUpdate: Restrict, map: "fuel_distributions_ibfk_1")
  fuel_invoices                                  fuel_invoices?   @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fuel_distributions_ibfk_2")
  users_fuel_distributions_distributed_byTousers users?           @relation("fuel_distributions_distributed_byTousers", fields: [distributed_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fuel_distributions_ibfk_3")
  users_fuel_distributions_authorized_byTousers  users?           @relation("fuel_distributions_authorized_byTousers", fields: [authorized_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fuel_distributions_ibfk_4")

  @@index([authorized_by], map: "authorized_by")
  @@index([distributed_by], map: "distributed_by")
  @@index([invoice_id], map: "invoice_id")
  @@index([machinery_id], map: "machinery_id")
}

model fuel_invoices {
  id                 Int                  @id @default(autoincrement())
  invoice_number     String               @db.VarChar(50)
  ruc_number         String               @db.VarChar(20)
  invoice_date       DateTime             @db.Date
  service_order      String?              @db.VarChar(50)
  unit_value         Decimal?             @db.Decimal(10, 2)
  currency           String?              @default("PEN") @db.VarChar(3)
  subtotal           Decimal?             @db.Decimal(10, 2)
  total              Decimal              @db.Decimal(10, 2)
  project            String?              @db.VarChar(100)
  fuel_quantity      Decimal              @db.Decimal(10, 2)
  cost_center_id     Int?
  invoice_type_id    Int?
  created_at         DateTime?            @default(now()) @db.Timestamp(0)
  created_by         Int?
  producto           String?              @db.VarChar(50)
  equipo             String?              @db.VarChar(255)
  fuel_distributions fuel_distributions[]
  cost_centers       cost_centers?        @relation(fields: [cost_center_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fuel_invoices_ibfk_1")
  invoice_types      invoice_types?       @relation(fields: [invoice_type_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fuel_invoices_ibfk_2")
  users              users?               @relation(fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fuel_invoices_ibfk_3")
  fuel_reservations  fuel_reservations[]

  @@index([cost_center_id], map: "cost_center_id")
  @@index([created_by], map: "created_by")
  @@index([invoice_type_id], map: "invoice_type_id")
}

model fuel_reservations {
  id                 Int                       @id @default(autoincrement())
  reservation_number String                    @db.VarChar(50)
  invoice_id         Int?
  reserved_fuel      Decimal                   @db.Decimal(10, 2)
  used_fuel          Decimal?                  @default(0.00) @db.Decimal(10, 2)
  reservation_date   DateTime                  @db.Date
  expiry_date        DateTime?                 @db.Date
  status             fuel_reservations_status? @default(active)
  created_at         DateTime?                 @default(now()) @db.Timestamp(0)
  authorizations     authorizations[]
  fuel_invoices      fuel_invoices?            @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fuel_reservations_ibfk_1")

  @@index([invoice_id], map: "invoice_id")
}

model invoice_types {
  id            Int             @id @default(autoincrement())
  name          String          @unique(map: "name") @db.VarChar(50)
  description   String?         @db.Text
  fuel_invoices fuel_invoices[]
}

model kardex {
  id                     Int                     @id @default(autoincrement())
  transaction_type       kardex_transaction_type
  reference_id           Int
  reference_table        String                  @db.VarChar(50)
  fuel_quantity          Decimal                 @db.Decimal(10, 2)
  unit_price             Decimal                 @db.Decimal(10, 4)
  total_amount           Decimal                 @db.Decimal(12, 4)
  balance_quantity       Decimal                 @db.Decimal(10, 2)
  balance_amount         Decimal                 @db.Decimal(12, 4)
  weighted_average_price Decimal                 @db.Decimal(10, 4)
  transaction_date       DateTime?               @default(now()) @db.Timestamp(0)
}

model machinery {
  id                 Int                  @id @default(autoincrement())
  code               String               @unique(map: "code") @db.VarChar(50)
  name               String               @db.VarChar(100)
  description        String?              @db.Text
  current_hourmeter  Decimal?             @default(0.00) @db.Decimal(10, 2)
  created_at         DateTime?            @default(now()) @db.Timestamp(0)
  fuel_distributions fuel_distributions[]
}

model users {
  id                                                          Int                  @id @default(autoincrement())
  username                                                    String               @unique(map: "username") @db.VarChar(50)
  password                                                    String               @db.VarChar(255)
  email                                                       String               @unique(map: "email") @db.VarChar(100)
  role                                                        users_role?          @default(operator)
  created_at                                                  DateTime?            @default(now()) @db.Timestamp(0)
  updated_at                                                  DateTime?            @default(now()) @db.Timestamp(0)
  authorizations_authorizations_requester_idTousers           authorizations[]     @relation("authorizations_requester_idTousers")
  authorizations_authorizations_approver_idTousers            authorizations[]     @relation("authorizations_approver_idTousers")
  fuel_distributions_fuel_distributions_distributed_byTousers fuel_distributions[] @relation("fuel_distributions_distributed_byTousers")
  fuel_distributions_fuel_distributions_authorized_byTousers  fuel_distributions[] @relation("fuel_distributions_authorized_byTousers")
  fuel_invoices                                               fuel_invoices[]
}

enum kardex_transaction_type {
  input
  output
  reservation
}

enum users_role {
  admin
  operator
  viewer
}

enum fuel_reservations_status {
  active
  used
  cancelled
}

enum authorizations_status {
  pending
  approved
  rejected
}
